write.csv(pit_NC,file="pit_NC.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_OB$WLS)){
if (i<=18) a[i] <- mean(pit_OB[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_OB[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_OB$WLS <- round(a,digits=3)
pit_OB$ER <- round(movavg(pit_OB$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_OB,file="pit_OB.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_SK$WLS)){
if (i<=18) a[i] <- mean(pit_SK[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_SK[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_SK$WLS <- round(a,digits=3)
pit_SK$ER <- round(movavg(pit_SK$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_SK,file="pit_SK.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_SS$WLS)){
if (i<=18) a[i] <- mean(pit_SS[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_SS[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_SS$WLS <- round(a,digits=3)
pit_SS$ER <- round(movavg(pit_SS$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_SS,file="pit_SS.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_WO$WLS)){
if (i<=18) a[i] <- mean(pit_WO[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_WO[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_WO$WLS <- round(a,digits=3)
pit_WO$ER <- round(movavg(pit_WO$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_WO,file="pit_WO.csv")#데이터를 파일에 저장함
pit_HH <- rbind(pit_HH,read.csv("pitHH.csv"))
pit_HT <- rbind(pit_HT,read.csv("pitHH.csv"))
pit_KT <- rbind(pit_KT,read.csv("pitHH.csv"))
pit_LG <- rbind(pit_LG,read.csv("pitHH.csv"))
pit_LT <- rbind(pit_LT,read.csv("pitHH.csv"))
pit_NC <- rbind(pit_NC,read.csv("pitHH.csv"))
pit_OB <- rbind(pit_OB,read.csv("pitHH.csv"))
pit_SS <- rbind(pit_SS,read.csv("pitHH.csv"))
pit_SK <- rbind(pit_SK,read.csv("pitHH.csv"))
pit_WO <- rbind(pit_WO,read.csv("pitHH.csv"))
for (i in 1:length(pit_HH$WLS)){
if (i<=18) a[i] <- mean(pit_HH[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_HH[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_HH$WLS <- round(a,digits=3)#소수점 두자리로 변환후 팀별 데이터의 승률값에 a값을 넣음
pit_HH$ER <- round(movavg(pit_HH$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점(자책점의 평균)의 이동평균을 구하였다.
write.csv(pit_HH,file="pit_HH.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_HT$WLS)){
if (i<=18) a[i] <- mean(pit_HT[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_HT[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_HT$WLS <- round(a,digits=3)
pit_HT$ER <- round(movavg(pit_KT$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_HT,file="pit_HT.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_KT$WLS)){
if (i<=18) a[i] <- mean(pit_KT[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_KT[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_KT$WLS <- round(a,digits=3)
pit_KT$ER <- round(movavg(pit_KT$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_KT,file="pit_KT.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_LG$WLS)){
if (i<=18) a[i] <- mean(pit_LG[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_LG[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_LG$WLS <- round(a,digits=3)
pit_LG$ER <- round(movavg(pit_LG$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_LG,file="pit_LG.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_LT$WLS)){
if (i<=18) a[i] <- mean(pit_LT[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_LT[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_LT$WLS <- round(a,digits=3)
pit_LT$ER <- round(movavg(pit_LT$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_LT,file="pit_LT.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_NC$WLS)){
if (i<=18) a[i] <- mean(pit_NC[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_NC[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_NC$WLS <- round(a,digits=3)
pit_NC$ER <- round(movavg(pit_NC$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_NC,file="pit_NC.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_OB$WLS)){
if (i<=18) a[i] <- mean(pit_OB[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_OB[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_OB$WLS <- round(a,digits=3)
pit_OB$ER <- round(movavg(pit_OB$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_OB,file="pit_OB.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_SK$WLS)){
if (i<=18) a[i] <- mean(pit_SK[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_SK[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_SK$WLS <- round(a,digits=3)
pit_SK$ER <- round(movavg(pit_SK$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_SK,file="pit_SK.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_SS$WLS)){
if (i<=18) a[i] <- mean(pit_SS[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_SS[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_SS$WLS <- round(a,digits=3)
pit_SS$ER <- round(movavg(pit_SS$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_SS,file="pit_SS.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_WO$WLS)){
if (i<=18) a[i] <- mean(pit_WO[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_WO[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_WO$WLS <- round(a,digits=3)
pit_WO$ER <- round(movavg(pit_WO$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_WO,file="pit_WO.csv")#데이터를 파일에 저장함
library(dplyr)
library(pracma)
setwd("C:/Users/kw102/Desktop/bigcon/2020빅콘테스트 데이터분석분야-퓨쳐스리그_스포츠투아이_제공데이터(.CSV)_시즌별, 시트별 구분")
pit <- read.csv("2020빅콘테스트_스포츠투아이_제공데이터_팀투수_2020.csv")
table(pit$WLS) # 승패 열에 "S"값은(세이브) 존재 안함
pit[pit$WLS=="L","WLS"] <- 0; pit[pit$WLS=="W","WLS"] <- 1; pit[pit$WLS=="D",'WLS'] <- NA
#WLS 열의 값들을 패는 0 승은 1 무승부는 NA로 변경함.
pit$WLS <- as.numeric(pit$WLS)
#값들을 실수형으로 변환
tp <- pit%>%select(GDAY_DS,T_ID,ER,WLS)
tp$GDAY_DS <- as.Date(as.character(tp$GDAY_DS),"%Y%m%d")
#날짜, 팀이름, 실책점, 승패 열 추출
pit_HH <- tp%>%filter(T_ID=="HH")%>%select(GDAY_DS,ER,WLS)
pit_HT <- tp%>%filter(T_ID=="HT")%>%select(GDAY_DS,ER,WLS)
pit_KT <- tp%>%filter(T_ID=="KT")%>%select(GDAY_DS,ER,WLS)
pit_LG <- tp%>%filter(T_ID=="LG")%>%select(GDAY_DS,ER,WLS)
pit_LT <- tp%>%filter(T_ID=="LT")%>%select(GDAY_DS,ER,WLS)
pit_NC <- tp%>%filter(T_ID=="NC")%>%select(GDAY_DS,ER,WLS)
pit_OB <- tp%>%filter(T_ID=="OB")%>%select(GDAY_DS,ER,WLS)
pit_SK <- tp%>%filter(T_ID=="SK")%>%select(GDAY_DS,ER,WLS)
pit_SS <- tp%>%filter(T_ID=="SS")%>%select(GDAY_DS,ER,WLS)
pit_WO <- tp%>%filter(T_ID=="WO")%>%select(GDAY_DS,ER,WLS)
#각 팀별로 변수를 만듬
##각팀별 데이터 변환
setwd("C:/Users/kw102/Desktop/bigcon/2020빅콘테스트 데이터분석분야-퓨쳐스리그_스포츠투아이_제공데이터(.CSV)_시즌별, 시트별 구분/수집데이터")
pit_HH <- rbind(pit_HH,read.csv("pitHH.csv"))
pit_HT <- rbind(pit_HT,read.csv("pitHH.csv"))
pit_KT <- rbind(pit_KT,read.csv("pitHH.csv"))
pit_LG <- rbind(pit_LG,read.csv("pitHH.csv"))
pit_LT <- rbind(pit_LT,read.csv("pitHH.csv"))
pit_NC <- rbind(pit_NC,read.csv("pitHH.csv"))
pit_OB <- rbind(pit_OB,read.csv("pitHH.csv"))
pit_SS <- rbind(pit_SS,read.csv("pitHH.csv"))
pit_SK <- rbind(pit_SK,read.csv("pitHH.csv"))
pit_WO <- rbind(pit_WO,read.csv("pitHH.csv"))
for (i in 1:length(pit_HH$WLS)){
if (i<=18) a[i] <- mean(pit_HH[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_HH[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_HH$WLS <- round(a,digits=3)#소수점 두자리로 변환후 팀별 데이터의 승률값에 a값을 넣음
pit_HH$ER <- round(movavg(pit_HH$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점(자책점의 평균)의 이동평균을 구하였다.
write.csv(pit_HH,file="pit_HH.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_HT$WLS)){
if (i<=18) a[i] <- mean(pit_HT[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_HT[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_HT$WLS <- round(a,digits=3)
pit_HT$ER <- round(movavg(pit_KT$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_HT,file="pit_HT.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_KT$WLS)){
if (i<=18) a[i] <- mean(pit_KT[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_KT[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_KT$WLS <- round(a,digits=3)
pit_KT$ER <- round(movavg(pit_KT$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_KT,file="pit_KT.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_LG$WLS)){
if (i<=18) a[i] <- mean(pit_LG[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_LG[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_LG$WLS <- round(a,digits=3)
pit_LG$ER <- round(movavg(pit_LG$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_LG,file="pit_LG.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_LT$WLS)){
if (i<=18) a[i] <- mean(pit_LT[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_LT[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_LT$WLS <- round(a,digits=3)
pit_LT$ER <- round(movavg(pit_LT$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_LT,file="pit_LT.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_NC$WLS)){
if (i<=18) a[i] <- mean(pit_NC[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_NC[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_NC$WLS <- round(a,digits=3)
pit_NC$ER <- round(movavg(pit_NC$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_NC,file="pit_NC.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_OB$WLS)){
if (i<=18) a[i] <- mean(pit_OB[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_OB[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_OB$WLS <- round(a,digits=3)
pit_OB$ER <- round(movavg(pit_OB$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_OB,file="pit_OB.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_SK$WLS)){
if (i<=18) a[i] <- mean(pit_SK[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_SK[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_SK$WLS <- round(a,digits=3)
pit_SK$ER <- round(movavg(pit_SK$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_SK,file="pit_SK.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_SS$WLS)){
if (i<=18) a[i] <- mean(pit_SS[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_SS[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_SS$WLS <- round(a,digits=3)
pit_SS$ER <- round(movavg(pit_SS$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_SS,file="pit_SS.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_WO$WLS)){
if (i<=18) a[i] <- mean(pit_WO[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_WO[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_WO$WLS <- round(a,digits=3)
pit_WO$ER <- round(movavg(pit_WO$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_WO,file="pit_WO.csv")#데이터를 파일에 저장함
pit_HH
pit_HH
pit_HH
library(dplyr)
library(pracma)
setwd("C:/Users/kw102/Desktop/bigcon/2020빅콘테스트 데이터분석분야-퓨쳐스리그_스포츠투아이_제공데이터(.CSV)_시즌별, 시트별 구분")
pit <- read.csv("2020빅콘테스트_스포츠투아이_제공데이터_팀투수_2020.csv")
table(pit$WLS) # 승패 열에 "S"값은(세이브) 존재 안함
pit[pit$WLS=="L","WLS"] <- 0; pit[pit$WLS=="W","WLS"] <- 1; pit[pit$WLS=="D",'WLS'] <- NA
#WLS 열의 값들을 패는 0 승은 1 무승부는 NA로 변경함.
pit$WLS <- as.numeric(pit$WLS)
#값들을 실수형으로 변환
tp <- pit%>%select(GDAY_DS,T_ID,ER,WLS)
tp$GDAY_DS <- as.Date(as.character(tp$GDAY_DS),"%Y%m%d")
#날짜, 팀이름, 실책점, 승패 열 추출
pit_HH <- tp%>%filter(T_ID=="HH")%>%select(GDAY_DS,ER,WLS)
pit_HT <- tp%>%filter(T_ID=="HT")%>%select(GDAY_DS,ER,WLS)
pit_KT <- tp%>%filter(T_ID=="KT")%>%select(GDAY_DS,ER,WLS)
pit_LG <- tp%>%filter(T_ID=="LG")%>%select(GDAY_DS,ER,WLS)
pit_LT <- tp%>%filter(T_ID=="LT")%>%select(GDAY_DS,ER,WLS)
pit_NC <- tp%>%filter(T_ID=="NC")%>%select(GDAY_DS,ER,WLS)
pit_OB <- tp%>%filter(T_ID=="OB")%>%select(GDAY_DS,ER,WLS)
pit_SK <- tp%>%filter(T_ID=="SK")%>%select(GDAY_DS,ER,WLS)
pit_SS <- tp%>%filter(T_ID=="SS")%>%select(GDAY_DS,ER,WLS)
pit_WO <- tp%>%filter(T_ID=="WO")%>%select(GDAY_DS,ER,WLS)
#각 팀별로 변수를 만듬
##각팀별 데이터 변환
setwd("C:/Users/kw102/Desktop/bigcon/2020빅콘테스트 데이터분석분야-퓨쳐스리그_스포츠투아이_제공데이터(.CSV)_시즌별, 시트별 구분/수집데이터")
pit_HH <- rbind(pit_HH,read.csv("pitHH.csv"))
pit_HT <- rbind(pit_HT,read.csv("pitHH.csv"))
pit_KT <- rbind(pit_KT,read.csv("pitHH.csv"))
pit_LG <- rbind(pit_LG,read.csv("pitHH.csv"))
pit_LT <- rbind(pit_LT,read.csv("pitHH.csv"))
pit_NC <- rbind(pit_NC,read.csv("pitHH.csv"))
pit_OB <- rbind(pit_OB,read.csv("pitHH.csv"))
pit_SS <- rbind(pit_SS,read.csv("pitHH.csv"))
pit_SK <- rbind(pit_SK,read.csv("pitHH.csv"))
pit_WO <- rbind(pit_WO,read.csv("pitHH.csv"))
pit_HH
a <- c()
for (i in 1:length(pit_HH$WLS)){
if (i<=18) a[i] <- mean(pit_HH[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_HH[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_HH$WLS <- round(a,digits=3)#소수점 두자리로 변환후 팀별 데이터의 승률값에 a값을 넣음
pit_HH$ER <- round(movavg(pit_HH$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점(자책점의 평균)의 이동평균을 구하였다.
pit_HH
a <- c()
for (i in 1:length(pit_HT$WLS)){
if (i<=18) a[i] <- mean(pit_HT[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_HT[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_HT$WLS <- round(a,digits=3)
pit_HT$ER <- round(movavg(pit_KT$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
pit_HT
a
round(movavg(pit_KT$ER,n=18),digits=3)
pit_HT$ER
pit_HT$ER <- round(movavg(pit_KT$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
round(movavg(pit_KT$ER,n=18),digits=3)
pit_HT$ER
pit_HT$ER <- round(movavg(pit_HT$ER,n=18),digits=3)
pit_HT
a <- c()
for (i in 1:length(pit_HH$WLS)){
if (i<=18) a[i] <- mean(pit_HH[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_HH[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_HH$WLS <- round(a,digits=3)#소수점 두자리로 변환후 팀별 데이터의 승률값에 a값을 넣음
pit_HH$ER <- round(movavg(pit_HH$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점(자책점의 평균)의 이동평균을 구하였다.
write.csv(pit_HH,file="pit_HH.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_HT$WLS)){
if (i<=18) a[i] <- mean(pit_HT[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_HT[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_HT$WLS <- round(a,digits=3)
pit_HT$ER <- round(movavg(pit_HT$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_HT,file="pit_HT.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_KT$WLS)){
if (i<=18) a[i] <- mean(pit_KT[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_KT[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_KT$WLS <- round(a,digits=3)
pit_KT$ER <- round(movavg(pit_KT$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_KT,file="pit_KT.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_LG$WLS)){
if (i<=18) a[i] <- mean(pit_LG[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_LG[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_LG$WLS <- round(a,digits=3)
pit_LG$ER <- round(movavg(pit_LG$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_LG,file="pit_LG.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_LT$WLS)){
if (i<=18) a[i] <- mean(pit_LT[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_LT[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_LT$WLS <- round(a,digits=3)
pit_LT$ER <- round(movavg(pit_LT$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_LT,file="pit_LT.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_NC$WLS)){
if (i<=18) a[i] <- mean(pit_NC[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_NC[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_NC$WLS <- round(a,digits=3)
pit_NC$ER <- round(movavg(pit_NC$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_NC,file="pit_NC.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_OB$WLS)){
if (i<=18) a[i] <- mean(pit_OB[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_OB[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_OB$WLS <- round(a,digits=3)
pit_OB$ER <- round(movavg(pit_OB$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_OB,file="pit_OB.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_SK$WLS)){
if (i<=18) a[i] <- mean(pit_SK[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_SK[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_SK$WLS <- round(a,digits=3)
pit_SK$ER <- round(movavg(pit_SK$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_SK,file="pit_SK.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_SS$WLS)){
if (i<=18) a[i] <- mean(pit_SS[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_SS[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_SS$WLS <- round(a,digits=3)
pit_SS$ER <- round(movavg(pit_SS$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_SS,file="pit_SS.csv")#데이터를 파일에 저장함
a <- c()
for (i in 1:length(pit_WO$WLS)){
if (i<=18) a[i] <- mean(pit_WO[1:i,"WLS"],na.rm=T)
else a[i] <- mean(pit_WO[i-17:i,"WLS"],na.rm = T)
}#승률은 18일간의 승,패값의 평균이므로 무승부인 NA값을 제외하고 평균을 구했다. (a값에 승률데이터 대입)
pit_WO$WLS <- round(a,digits=3)
pit_WO$ER <- round(movavg(pit_WO$ER,n=18),digits=3)# movavg 함수를 이용하여 평균자책점의 이동평균을 구하였다.
write.csv(pit_WO,file="pit_WO.csv")#데이터를 파일에 저장함
library(dplyr)
library(pracma)
setwd("C:/Users/kw102/Desktop/bigcon/2020빅콘테스트 데이터분석분야-퓨쳐스리그_스포츠투아이_제공데이터(.CSV)_시즌별, 시트별 구분/수집데이터")
setwd("C:/Users/kw102/Desktop/bigcon/2020빅콘테스트 데이터분석분야-퓨쳐스리그_스포츠투아이_제공데이터(.CSV)_시즌별, 시트별 구분/수집데이터/")
hit <- read.csv("hitHH.csv")
hit <- read.csv("pitHH.csv")
setwd("C:/Users/kw102/Desktop/bigcon/2020빅콘테스트 데이터분석분야-퓨쳐스리그_스포츠투아이_제공데이터(.CSV)_시즌별, 시트별 구분/수집데이터/")
setwd("C:/Users/kw102/Desktop/bigcon/2020빅콘테스트 데이터분석분야-퓨쳐스리그_스포츠투아이_제공데이터(.CSV)_시즌별, 시트별 구분/수집데이터/수집데이터")
hit <- read.csv("hitHH.csv")
hit
setwd("C:/Users/kw102/Desktop/bigcon/2020빅콘테스트 데이터분석분야-퓨쳐스리그_스포츠투아이_제공데이터(.CSV)_시즌별, 시트별 구분/수집데이터")
hit <- read.csv("2020빅콘테스트_스포츠투아이_제공데이터_팀투수_2020.csv")
hit <- read.csv("2020빅콘테스트_스포츠투아이_제공데이터_팀투수_2020.csv")
th <- hit%>%mutate(BA = (HIT+H2+H3+HR)/AB)%>%select(GDAY_DS,T_ID,BA)
hit_HH <- th%>%filter(T_ID=="HH") # 팀별 추출
hit_HT <- th%>%filter(T_ID=="HT")
hit_KT <- th%>%filter(T_ID=="KT")
hit_LG <- th%>%filter(T_ID=="LG")
hit_LT <- th%>%filter(T_ID=="LT")
hit_NC <- th%>%filter(T_ID=="NC")
hit_OB <- th%>%filter(T_ID=="OB")
hit_SK <- th%>%filter(T_ID=="SK")
hit_SS <- th%>%filter(T_ID=="SS")
hit_WO <- th%>%filter(T_ID=="WO")
hit_HH
th$GDAY_DS <- as.Date(th$GDAY_DS,"%Y%m%d")
th$GDAY_DS
th$GDAY_DS <- as.Date(as.character(th$GDAY_DS),"%Y%m%d")
th$GDAY_DS
hit_HH <- th%>%filter(T_ID=="HH") # 팀별 추출
hit_HT <- th%>%filter(T_ID=="HT")
hit_KT <- th%>%filter(T_ID=="KT")
hit_LG <- th%>%filter(T_ID=="LG")
hit_LT <- th%>%filter(T_ID=="LT")
hit_NC <- th%>%filter(T_ID=="NC")
hit_OB <- th%>%filter(T_ID=="OB")
hit_SK <- th%>%filter(T_ID=="SK")
hit_SS <- th%>%filter(T_ID=="SS")
hit_WO <- th%>%filter(T_ID=="WO")
th <- hit%>%mutate(BA = (HIT+H2+H3+HR)/AB)%>%select(GDAY_DS,T_ID,BA)
th$GDAY_DS <- as.Date(as.character(th$GDAY_DS),"%Y%m%d")
hit_HH <- th%>%filter(T_ID=="HH")%>%select(GDAY_DS,BA) # 팀별 추출
hit_HT <- th%>%filter(T_ID=="HT")%>%select(GDAY_DS,BA)
hit_KT <- th%>%filter(T_ID=="KT")%>%select(GDAY_DS,BA)
hit_LG <- th%>%filter(T_ID=="LG")%>%select(GDAY_DS,BA)
hit_LT <- th%>%filter(T_ID=="LT")%>%select(GDAY_DS,BA)
hit_NC <- th%>%filter(T_ID=="NC")%>%select(GDAY_DS,BA)
hit_OB <- th%>%filter(T_ID=="OB")%>%select(GDAY_DS,BA)
hit_SK <- th%>%filter(T_ID=="SK")%>%select(GDAY_DS,BA)
hit_SS <- th%>%filter(T_ID=="SS")%>%select(GDAY_DS,BA)
hit_WO <- th%>%filter(T_ID=="WO")%>%select(GDAY_DS,BA)
setwd("C:/Users/kw102/Desktop/bigcon/2020빅콘테스트 데이터분석분야-퓨쳐스리그_스포츠투아이_제공데이터(.CSV)_시즌별, 시트별 구분/수집데이터")
setwd("C:/Users/kw102/Desktop/bigcon/2020빅콘테스트 데이터분석분야-퓨쳐스리그_스포츠투아이_제공데이터(.CSV)_시즌별, 시트별 구분/수집데이터/수집데이터터")
setwd("C:/Users/kw102/Desktop/bigcon/2020빅콘테스트 데이터분석분야-퓨쳐스리그_스포츠투아이_제공데이터(.CSV)_시즌별, 시트별 구분/수집데이터/수집데이터")
hit_HH <- rbind(hit_HH,read.csv(hitHH))
hit_HH <- rbind(hit_HH,read.csv("hitHH.csv"))
hit_HH <- rbind(hit_HH,read.csv("hitHH.csv"))
hit_HT <- rbind(hit_HH,read.csv("hitHT.csv"))
hit_KT <- rbind(hit_HH,read.csv("hitKT.csv"))
hit_LG <- rbind(hit_HH,read.csv("hitLG.csv"))
hit_LT <- rbind(hit_HH,read.csv("hitLT.csv"))
hit_NC <- rbind(hit_HH,read.csv("hitNC.csv"))
hit_OB <- rbind(hit_HH,read.csv("hitOB.csv"))
hit_SK <- rbind(hit_HH,read.csv("hitSK.csv"))
hit_SS <- rbind(hit_HH,read.csv("hitSS.csv"))
hit_WO <- rbind(hit_HH,read.csv("hitWO.csv"))
hit_HH[,3] <- round(movavg(hit_HH[,2],n=18),digits=3 ) #BA열 이동평균하고 소숫점 3자리까지만 출력
hit_HT[,3] <- round(movavg(hit_HT[,2],n=18),digits=3 )
hit_KT[,3] <- round(movavg(hit_KT[,2],n=18),digits=3 )
hit_LG[,3] <- round(movavg(hit_LG[,2],n=18),digits=3 )
hit_LT[,3] <- round(movavg(hit_LT[,2],n=18),digits=3 )
hit_NC[,3] <- round(movavg(hit_NC[,2],n=18),digits=3 )
hit_OB[,3] <- round(movavg(hit_OB[,2],n=18),digits=3 )
hit_SK[,3] <- round(movavg(hit_SK[,2],n=18),digits=3 )
hit_SS[,3] <- round(movavg(hit_SS[,2],n=18),digits=3 )
hit_WO[,3] <- round(movavg(hit_WO[,2],n=18),digits=3 )
write.csv(hit_HH,file="hit_HH.csv")
write.csv(hit_HT,file="hit_HT.csv")
write.csv(hit_KT,file="hit_KT.csv")
write.csv(hit_LG,file="hit_LG.csv")
write.csv(hit_LT,file="hit_LT.csv")
write.csv(hit_NC,file="hit_NC.csv")
write.csv(hit_OB,file="hit_OB.csv")
write.csv(hit_SK,file="hit_SK.csv")
write.csv(hit_SS,file="hit_SS.csv")
write.csv(hit_WO,file="hit_WO.csv")
library(dplyr)
library(pracma)
hit <- read.csv("2020빅콘테스트_스포츠투아이_제공데이터_팀투수_2020.csv")
th <- hit%>%mutate(BA = (HIT+H2+H3+HR)/AB)%>%select(GDAY_DS,T_ID,BA) #타율열 생성 및 날짜, 팀이름, 타율 열만 추출
th$GDAY_DS <- as.Date(as.character(th$GDAY_DS),"%Y%m%d")#날짜열 표준화
hit_HH <- th%>%filter(T_ID=="HH")%>%select(GDAY_DS,BA) # 팀별 추출
hit_HT <- th%>%filter(T_ID=="HT")%>%select(GDAY_DS,BA)
hit_KT <- th%>%filter(T_ID=="KT")%>%select(GDAY_DS,BA)
hit_LG <- th%>%filter(T_ID=="LG")%>%select(GDAY_DS,BA)
hit_LT <- th%>%filter(T_ID=="LT")%>%select(GDAY_DS,BA)
hit_NC <- th%>%filter(T_ID=="NC")%>%select(GDAY_DS,BA)
hit_OB <- th%>%filter(T_ID=="OB")%>%select(GDAY_DS,BA)
hit_SK <- th%>%filter(T_ID=="SK")%>%select(GDAY_DS,BA)
hit_SS <- th%>%filter(T_ID=="SS")%>%select(GDAY_DS,BA)
hit_WO <- th%>%filter(T_ID=="WO")%>%select(GDAY_DS,BA)
#기존데이터와 수집데이터 병합
hit_HH <- rbind(hit_HH,read.csv("hitHH.csv"))
hit_HT <- rbind(hit_HH,read.csv("hitHT.csv"))
hit_KT <- rbind(hit_HH,read.csv("hitKT.csv"))
hit_LG <- rbind(hit_HH,read.csv("hitLG.csv"))
hit_LT <- rbind(hit_HH,read.csv("hitLT.csv"))
hit_NC <- rbind(hit_HH,read.csv("hitNC.csv"))
hit_OB <- rbind(hit_HH,read.csv("hitOB.csv"))
hit_SK <- rbind(hit_HH,read.csv("hitSK.csv"))
hit_SS <- rbind(hit_HH,read.csv("hitSS.csv"))
hit_WO <- rbind(hit_HH,read.csv("hitWO.csv"))
hit_HH[,2] <- round(movavg(hit_HH[,2],n=18),digits=3 ) #BA열 이동평균하고 소숫점 3자리까지만 출력
hit_HT[,2] <- round(movavg(hit_HT[,2],n=18),digits=3 )
hit_KT[,2] <- round(movavg(hit_KT[,2],n=18),digits=3 )
hit_LG[,2] <- round(movavg(hit_LG[,2],n=18),digits=3 )
hit_LT[,2] <- round(movavg(hit_LT[,2],n=18),digits=3 )
hit_NC[,2] <- round(movavg(hit_NC[,2],n=18),digits=3 )
hit_OB[,2] <- round(movavg(hit_OB[,2],n=18),digits=3 )
hit_SK[,2] <- round(movavg(hit_SK[,2],n=18),digits=3 )
hit_SS[,2] <- round(movavg(hit_SS[,2],n=18),digits=3 )
hit_WO[,2] <- round(movavg(hit_WO[,2],n=18),digits=3 )
#엑셀 파일로 만들기.
write.csv(hit_HH,file="hit_HH.csv")
write.csv(hit_HT,file="hit_HT.csv")
write.csv(hit_KT,file="hit_KT.csv")
write.csv(hit_LG,file="hit_LG.csv")
write.csv(hit_LT,file="hit_LT.csv")
write.csv(hit_NC,file="hit_NC.csv")
write.csv(hit_OB,file="hit_OB.csv")
write.csv(hit_SK,file="hit_SK.csv")
write.csv(hit_SS,file="hit_SS.csv")
write.csv(hit_WO,file="hit_WO.csv")
